{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setmovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setmovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAMeA,E,OALAC,EAAMC,OAAO,CACxBC,QAAQ,iC,yBCIG,SAASC,EAAT,GAA2C,IAA7BC,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,SAASC,EAAa,EAAbA,WAAa,EAC5BC,mBAAS,IADmB,mBAC9CC,EAD8C,KACvCC,EADuC,OAEpBF,mBAAS,IAFW,mBAE9CG,EAF8C,KAEnCC,EAFmC,KAGrDC,qBAAU,WAAI,4CACV,4BAAAC,EAAA,sEACwBb,EAAMc,IAAIT,GADlC,cACUU,EADV,OAEEN,EAAUM,EAAQC,KAAKC,SAFzB,kBAGWF,GAHX,4CADU,uBAAC,WAAD,wBAMVG,KACF,CAACb,IAqBH,OACI,sBAAKc,UAAU,MAAf,UACI,6BAAKf,IACL,qBAAKe,UAAS,sBAAiBb,GAAc,mBAA7C,SACIE,EAAOY,KAAI,SAAAC,GAAK,OACb,qBAAKC,QAAS,kBAjBZ,SAACD,GACZX,EACCC,EAAc,IAEdY,KAAkB,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOG,OAAQ,IAC3BC,MAAK,SAACC,GACH,IAAMC,EAAU,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QACjDnB,EAAcgB,EAAUb,IAAI,SAE/BiB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAQFG,CAAYd,IAAuBF,UAAU,aAAaiB,IAAG,UArCnF,wCAqCmF,OAAgB9B,EAAYe,EAAMgB,YAAYhB,EAAMiB,eAAiBC,IAAKlB,EAAMG,MAApHH,EAAMmB,SAGvD9B,GAAc,cAAC,IAAD,CAAS+B,QAAS/B,EAAYgC,KA5B3C,CACPC,OAAO,MACPC,MAAM,OACNC,WAAW,CACPC,SAAS,SCrBpB,IAAMC,EAAQ,mCAcCC,EAXE,CACfC,cAAc,4BAAD,OAA8BF,EAA9B,mBACbG,sBAAsB,wBAAD,OAA0BH,EAA1B,sBACrBI,cAAc,4BAAD,OAA8BJ,EAA9B,mBACbK,kBAAkB,2BAAD,OAA6BL,EAA7B,mBACjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,kBAAkB,2BAAD,OAA6BP,EAA7B,mBACjBQ,mBAAmB,2BAAD,OAA6BR,EAA7B,sBAClBS,mBAAmB,2BAAD,OAA6BT,EAA7B,oB,MCPL,SAASU,IAAU,IAeZC,EAAIC,EAfO,EACNpD,mBAAS,IADH,mBACtBc,EADsB,KAChBuC,EADgB,KAkB7B,OAhBAhD,qBAAU,WAAI,4CACT,4BAAAC,EAAA,sEACwBb,EAAMc,IAAIkC,EAASE,uBAD3C,cACUnC,EADV,OAEF6C,EACI7C,EAAQC,KAAKC,QACZ4C,KAAKC,MAAMD,KAAKE,SAAShD,EAAQC,KAAKC,QAAQ+C,OAAO,KAJxD,kBAMMjD,GANN,4CADS,uBAAC,WAAD,wBAUTG,KACH,IACFe,QAAQC,IAAIb,GAKR,yBAAQF,UAAU,SAClB8C,MAAO,CACHC,eAAe,QACfC,gBAAgB,2CAAD,cAA4C9C,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAOiB,cAAnD,KACf8B,mBAAmB,iBAJvB,UAOC,sBAAMjD,UAAU,kBAAhB,UAEA,oBAAIA,UAAU,eAAd,UACM,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOjB,SAAP,OAAgBiB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOG,QAAvB,OAA+BH,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOgD,iBAEvC,sBAAKlD,UAAU,iBAAf,UACE,wBAAQA,UAAU,gBAAlB,kBACA,wBAAQA,UAAU,gBAAlB,wBAGF,oBAAIA,UAAU,qBAAd,UArBauC,EAqB+B,OAACrC,QAAD,IAACA,OAAD,EAACA,EAAOiD,SArBnCX,EAqB4C,KApBpD,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKM,QAAOL,EAAID,EAAIa,OAAO,EAAEZ,EAAE,GAAG,MAAMD,QAsB9C,qBAAKvC,UAAU,yB,MCxCT,SAASqD,IAAO,IAAD,EACFjE,oBAAS,GADP,mBACnBkE,EADmB,KACdC,EADc,KAY1B,OAVA9D,qBAAU,WAMN,OALA+D,OAAOC,iBAAiB,UAAS,WAC1BD,OAAOE,QAAQ,IACdH,GAAW,GACTA,GAAW,MAEd,WACHC,OAAOG,oBAAoB,aAEjC,IAEF,sBAAK3D,UAAS,cAASsD,GAAQ,cAA/B,UACO,qBACKtD,UAAU,YACViB,IAAI,+GAEZ,qBACIjB,UAAU,cACViB,IAAI,qFCMD2C,MAtBf,WAEE,OACE,sBAAK5D,UAAU,MAAf,UACA,cAAC,EAAD,IACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAKf,MAAM,oBAAoBC,SAAU2C,EAASE,sBACjD5C,YAAU,IAEX,cAAC,EAAD,CAAKF,MAAM,eAAeC,SAAU2C,EAASC,gBAC7C,cAAC,EAAD,CAAK7C,MAAM,YAAYC,SAAU2C,EAASG,gBAC1C,cAAC,EAAD,CAAK/C,MAAM,gBAAgBC,SAAU2C,EAASI,oBAC9C,cAAC,EAAD,CAAKhD,MAAM,gBAAgBC,SAAU2C,EAASK,oBAC9C,cAAC,EAAD,CAAKjD,MAAM,gBAAgBC,SAAU2C,EAASM,oBAC9C,cAAC,EAAD,CAAKlD,MAAM,iBAAiBC,SAAU2C,EAASO,qBAC/C,cAAC,EAAD,CAAKnD,MAAM,gBAAgBC,SAAU2C,EAASQ,yBCTrCwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzD,MAAK,YAAkD,IAA/C0D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.75a3c125.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst instance=axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\",\r\n});\r\n\r\n\r\nexport default instance;","import React ,{useState,useEffect} from \"react\";\r\nimport './Row.css';\r\nimport axios from './axios';\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nconst base_url=\"https://image.tmdb.org/t/p/original/\";\r\nexport default function Row({title,fetchUrl,isLargeRow}) {\r\n    const [movies,setmovies]=useState([]);\r\n    const [trailerUrl,setTrailerUrl]=useState(\"\");\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request=await axios.get(fetchUrl);\r\n          setmovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[fetchUrl]);\r\n   const opts={\r\n       height:\"390\",\r\n       width:\"100%\",\r\n       playerVars:{\r\n           autoplay:1\r\n       },\r\n   };\r\n\r\n   const handleClick=(movie)=>{\r\n       if(trailerUrl){\r\n           setTrailerUrl('');\r\n       }else{\r\n           movieTrailer(movie?.name || \"\")\r\n           .then((url)=>{\r\n               const urlParams=new URLSearchParams(new URL(url).search);\r\n               setTrailerUrl(urlParams.get('v'));\r\n           })\r\n           .catch((error)=>console.log(error));\r\n       }\r\n   };\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className={`row_posters ${isLargeRow && \"row_posterLarge\"}`}>\r\n               {movies.map(movie =>(\r\n                   <img onClick={()=>handleClick(movie)} key={movie.id} className=\"row_poster\" src={`${base_url}${isLargeRow ?movie.poster_path:movie.backdrop_path}`} alt={movie.name}/>\r\n               ))}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}/>}\r\n        </div>\r\n    )\r\n}\r\n","const API_KEY='841361cb5acc15f8c2ac12a47bf5bbf9';\r\n\r\n\r\nconst requests = {\r\n  fetchTrending: `trending/all/day?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n\r\n//const API_REQUEST='https://api.themoviedb.org/3/trending/all/day?api_key=841361cb5acc15f8c2ac12a47bf5bbf9&language=en-US';","import React,{useState,useEffect} from 'react'\r\nimport \"./Banner.css\";\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nexport default function Banner() {\r\n    const [movie,setmovie]=useState([]);\r\n    useEffect(()=>{\r\n         async function fetchData(){\r\n             const request=await axios.get(requests.fetchNetflixOriginals);\r\n       setmovie(\r\n           request.data.results[\r\n            Math.floor(Math.random()*request.data.results.length-1)\r\n        ]); \r\n        return request;\r\n    \r\n         }\r\n         fetchData();\r\n    },[]);\r\n    console.log(movie);\r\n    function truncate(str,n){\r\n        return str?.length>n ? str.substr(0,n-1)+\"...\":str;\r\n    }\r\n    return (\r\n        <header className=\"banner\"\r\n        style={{\r\n            backgroundSize:\"cover\",\r\n            backgroundImage:`url(https://image.tmdb.org/t/p/original/${movie?.backdrop_path})`,\r\n            backgroundPosition:\"center center\",\r\n        }}\r\n        >\r\n         <div  className=\"banner_contents\">\r\n         \r\n         <h1 className=\"banner_title\">\r\n         {movie?.title || movie?.name || movie?.original_name}\r\n         </h1>\r\n         <div className=\"banner_buttons\">\r\n           <button className=\"banner_button\">Play</button>\r\n           <button className=\"banner_button\">My List</button>\r\n\r\n         </div>\r\n         <h1 className=\"banner_description\">{truncate(movie?.overview,150)}</h1>\r\n         </div> \r\n         <div className=\"banner-fadeBotton\"/>  \r\n        </header>\r\n    )\r\n}\r\n","import React ,{useState,useEffect} from 'react'\r\nimport \"./Nav.css\";\r\nexport default function Nav() {\r\n    const [show,handleShow]=useState(false);\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\",()=>{\r\n            if(window.scrollY>100){\r\n                handleShow(true);\r\n            }else handleShow(false);\r\n        });\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\");\r\n        }\r\n    },[]);\r\n    return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n           <img\r\n                className=\"nav__logo\"\r\n                src=\"https://raw.githubusercontent.com/karlhadwen/netflix/679878ab1f883596bdecb90ef455df649c07c73c/src/logo.svg\"\r\n        />\r\n        <img\r\n            className=\"nav__avatar\"\r\n            src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n        />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Row from './Row.js'\nimport requests from './requests';\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\nfunction App() {\n  \n  return (\n    <div className=\"app\">\n    <Nav/>\n      <Banner/>\n      <Row title='NETFLIX ORIGINALS' fetchUrl={requests.fetchNetflixOriginals}\n       isLargeRow\n      />\n      <Row title='Trending Now' fetchUrl={requests.fetchTrending}/>\n      <Row title='Top Rated' fetchUrl={requests.fetchTopRated}/>\n      <Row title='Action Movies' fetchUrl={requests.fetchActionMovies}/>\n      <Row title='Comedy Movies' fetchUrl={requests.fetchComedyMovies}/>\n      <Row title='Horror Movies' fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title='Romance Movies' fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title='Documentaries' fetchUrl={requests.fetchDocumentaries}/>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}